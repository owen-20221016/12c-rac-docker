# Main variables file
# Installation file locations are sourced from the files.yml in this same directory


# ASM disk groups can be composed of block devices, file devices or both
asm_disk_groups:
  - group: DATA
    disks:
      - rawpath: /dev/sdb
        udevpath: /dev/asmdisks/asm-clu-121-DATA-disk1
        type: block
      - rawpath: /dev/sdc
        udevpath: /dev/asmdisks/asm-clu-121-DATA-disk2
        type: block
      - rawpath: /dev/sdd
        udevpath: /dev/asmdisks/asm-clu-121-DATA-disk3
        type: block
  - group: NDATA
    disks:
      - path: /oraclenfs/asm-clu-121-NDATA-disk1
        type: file
      - path: /oraclenfs/asm-clu-121-NDATA-disk2
        type: file
      - path: /oraclenfs/asm-clu-121-NDATA-disk3
        type: file


# All OS users and groups should already exist
operating_system:
  rac_node_directory: /srv/docker/rac_nodes/custom_services
  scripts_directory: /srv/docker/scripts

  grid_infrastructure:
    users:
      - name: grid
        title: owner
        uid: 54421
    groups:
      - name: oinstall
        title: inventory
        gid: 54321
      - name: asmdba
        title: osdba
        gid: 54421
      - name: asmadmin
        title: osasm
        gid: 54422
      - name: asmoper
        title: osoper
        gid: 54423

  database:
    users:
      - name: oracle
        title: owner
        uid: 54321
    groups:
      - name: dba
        title: osdba
        gid: 54322
      - name: oper
        title: osoper
        gid: 54323
      - name: backupdba
        title: osbackupdba
        gid: 54324
      - name: dgdba
        title: osdgdba
        gid: 54325
      - name: kmdba
        title: oskmdba
        gid: 54326
      - name: racdba
        title: osracdba
        gid: 54327


oracle_binaries:
  - type: all
    oracle_inventory: /u01/app/12.2.0

  - type: grid
    version: 12.2.0.1
    oracle_base: /u01/app/grid
    oracle_home: /u01/app/12.2.0/grid
    root_sh: /stage/12.2.0.1/grid
    cluster_name: clu-121
    scan_name: clu-121-scan.clu-121.example.com
    scan_port: 1521
    cluster_type: STANDARD
    cluster_storage: LOCAL_ASM_STORAGE
    cluster_asm_dg_name: DATA
    cluster_asm_dg_redundancy: EXTERNAL
    asm_discovery_string: /dev/asmdisks/*,/oraclenfs/asm*
    gns_vip: clu-121-gns.example.com  # Needs to already exist in DNS
    gns_sub_domain: clu-121.example.com  # Needs to already exist in DNS
    install_management_database: False
#    backdba_group: asmadmin  # oracle.install.db.BACKUPDBA_GROUP=dba
#    dgdba_group: asmadmin  # oracle.install.db.DGDBA_GROUP=dba
#    kmdba_group: asmadmin  # oracle.install.db.KMDBA_GROUP=dba
#    #   "oracle.install.asm.OSDBA=asmdba" \
#    #   "oracle.install.asm.OSOPER=asmoper" \
#    #   "oracle.install.asm.OSASM=asmadmin"'
#    memory_limit: 400  # oracle.install.db.config.starterdb.memoryLimit
#    # oracle.install.option=INSTALL_DB_SWONLY
#    install_option: INSTALL_DB_SWONLY
    asm_passwords:
      sysasm: oracle_4U
      asmsnmp: oracle_4U

  - type: database
    version: 12.2.0.1
    oracle_base: /u01/app/oracle
    oracle_home: /u01/app/oracle/product/12.2.0/dbhome_1
    # oracle.install.db.OSRACDBA_GROUP
    osracdba_group: racdba
    database_passwords:
      sys: oracle_4U
      system: oracle_4U


# Find 'file_locations' variables in the files.yml in this same directory
installation_files:
  #  - type: opatch
  #    version: 12.2.0.1
  #    files:
  #      - name: "{{ file_locations.file1 }}"
  #        creates: OPatch/opatch
  #
  ## Should include all patch subdirectories in bundle patch
  ## opatch will automatically skip patches that don't apply to the home that is being patched
  #  - type: bundle
  #    version: 12.2.0.1
  #    patch_numbers:
  #      - 23615334/21436941
  #      - 23615334/23177536
  #      - 23615334/23144544
  #      - 23615334/23054341
  #      - 23615334/23520664
  #    files:
  #      - name: "{{ file_locations.file2 }}"
  ## Unzip each file and pick one of the files or directories it creates
  #        creates: 23615334/23144544/23144544/files/rdbms/lib
  #
  #  - type: oneoff
  #    version: 12.2.0.1
  #    patch_numbers:
  #      - 19404068
  #    files:
  #      - name:  "{{ file_locations.file3 }}"
  #        creates: 19404068/files/rdbms/lib

  - type: grid
    version: 12.2.0.1
    files:
      - name: "{{ file_locations.file4 }}"
        creates: grid/stage/Components/oracle.oraolap.dbscripts/12.2.0.1.0
      - name: "{{ file_locations.file5 }}"
        creates: grid/stage/Components/oracle.has.crs/12.2.0.1.0
    installer_parameters:
      - -waitforcompletion
#      - -ignoreSysPrereqs
      - -silent
      - -force
      - oracle.install.option=CRS_SWONLY
      - "INVENTORY_LOCATION={{ oracle_binaries |
           selectattr('type', 'equalto', 'all') |
           map(attribute='oracle_inventory') | first }}"
      - "UNIX_GROUP_NAME={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'inventory') |
           map(attribute='name') | first }}"
#      - "ORACLE_HOME={{ oracle_binaries |
#           selectattr('type', 'equalto', 'grid') |
#           selectattr('version', 'equalto', '12.2.0.1') |
#           map(attribute='oracle_home') | first }}"
      - "ORACLE_BASE={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='oracle_base') | first }}"
#      - "oracle.install.db.config.starterdb.SID={{ oracle_binaries |
#           selectattr('type', 'equalto', 'grid') |
#           selectattr('version', 'equalto', '12.2.0.1') |
#           map(attribute='oracle_sid') | first }}"
#      - "oracle.install.option={{ oracle_binaries |
#                 selectattr('type', 'equalto', 'grid') |
#                 selectattr('version', 'equalto', '12.2.0.1') |
#                 map(attribute='install_option') | first }}"
#      - "oracle.install.db.config.starterdb.globalDBName={{ oracle_binaries |
#                 selectattr('type', 'equalto', 'grid') |
#                 selectattr('version', 'equalto', '12.2.0.1') |
#                 map(attribute='oracle_name') | first }}"
#      - "oracle.install.db.BACKUPDBA_GROUP={{ oracle_binaries |
#                       selectattr('type', 'equalto', 'grid') |
#                       selectattr('version', 'equalto', '12.2.0.1') |
#                       map(attribute='backdba_group') | first }}"
#      - "oracle.install.db.DGDBA_GROUP={{ oracle_binaries |
#                       selectattr('type', 'equalto', 'grid') |
#                       selectattr('version', 'equalto', '12.2.0.1') |
#                       map(attribute='dgdba_group') | first }}"
#      - "oracle.install.db.KMDBA_GROUP={{ oracle_binaries |
#                       selectattr('type', 'equalto', 'grid') |
#                       selectattr('version', 'equalto', '12.2.0.1') |
#                       map(attribute='kmdba_group') | first }}"
      - "oracle.install.asm.OSDBA={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osdba') |
           map(attribute='name') | first }}"
      - "oracle.install.asm.OSOPER={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osoper') |
           map(attribute='name') | first }}"
      - "oracle.install.asm.OSASM={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osasm') |
           map(attribute='name') | first }}"
#      - "oracle.install.db.config.starterdb.memoryLimit={{ oracle_binaries |
#                         selectattr('type', 'equalto', 'grid') |
#                         selectattr('version', 'equalto', '12.2.0.1') |
#                         map(attribute='memory_limit') | first }}"
    configuration_parameters:
      - -waitforcompletion
      - -ignoreSysPrereqs
      - -silent
      - -force
      - oracle.install.option=CRS_CONFIG
      - oracle.install.crs.config.gpnp.configureGNS=true
      - oracle.install.crs.config.autoConfigureClusterNodeVIP=true
      - oracle.install.crs.config.gpnp.gnsOption=CREATE_NEW_GNS
      - oracle.install.crs.config.useIPMI=false
      - oracle.install.asm.useExistingDiskGroup=false
      - "INVENTORY_LOCATION={{ oracle_binaries |
           selectattr('type', 'equalto', 'all') |
           map(attribute='oracle_inventory') | first }}"
      - "UNIX_GROUP_NAME={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'inventory') |
           map(attribute='name') | first }}"
      - "ORACLE_HOME={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='oracle_home') | first }}"
      - "ORACLE_BASE={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='oracle_base') | first }}"
      - "oracle.install.asm.OSDBA={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osdba') |
           map(attribute='name') | first }}"
      - "oracle.install.asm.OSOPER={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osoper') |
           map(attribute='name') | first }}"
      - "oracle.install.asm.OSASM={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'osasm') |
           map(attribute='name') | first }}"
      - "oracle.install.crs.config.gpnp.scanName={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='scan_name') | first }}"
      - "oracle.install.crs.config.gpnp.scanPort={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='scan_port') | first }}"
      - "oracle.install.crs.config.ClusterType={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='cluster_type') | first }}"
      - "oracle.install.crs.config.clusterName={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='cluster_name') | first }}"
      - "oracle.install.crs.config.gpnp.gnsSubDomain={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='gns_sub_domain') | first }}"
      - "oracle.install.crs.config.gpnp.gnsVIPAddress={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='gns_vip') | first }}"
      - "oracle.install.crs.config.clusterNodes={{ first_rac_node }}:AUTO"
      - "oracle.install.crs.config.networkInterfaceList={{
           docker.networks | 
           selectattr('type', 'equalto', 'public') |
           map(attribute='network_name') | first
        }}:{{
           docker.networks | 
           selectattr('type', 'equalto', 'public') |
           map(attribute='subnet') | first
        }}:1,{{ 
           docker.networks | 
           selectattr('type', 'equalto', 'private') |
           map(attribute='network_name') | first
        }}:{{
           docker.networks | 
           selectattr('type', 'equalto', 'private') |
           map(attribute='subnet') | first
        }}:2"
      - "oracle.install.crs.config.storageOption={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='cluster_storage') | first }}"
      - "oracle.install.asm.SYSASMPassword={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='asm_passwords.sysasm') | first }}"
      - "oracle.install.asm.monitorPassword={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='asm_passwords.asmsnmp') | first }}"
      - "oracle.install.asm.diskGroup.name={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='cluster_asm_dg_name') | first }}"
      - "oracle.install.asm.diskGroup.redundancy={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='cluster_asm_dg_redundancy') | first }}"
      - "oracle.install.asm.diskGroup.disks=
           {%- set comma = joiner(',') -%}
           {% for disk in asm_disk_groups |
                selectattr('group', 'equalto',
                         oracle_binaries |
                         selectattr('type', 'equalto', 'grid') |
                         selectattr('version', 'equalto', '12.2.0.1') |
                         map(attribute='cluster_asm_dg_name') | first) |
                map(attribute='disks') -%}
             {% for path in disk | map(attribute='udevpath') -%}
               {{ comma() }}{{ path }}
             {%- endfor %}
           {%- endfor %}"
      - "oracle.install.asm.diskGroup.diskDiscoveryString={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='asm_discovery_string') | first }}"
    tools_configuration_parameters:
      - "oracle.assistants.asm|S_ASMPASSWORD={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='asm_passwords.sysasm') | first }}"
      - "oracle.assistants.asm|S_ASMMONITORPASSWORD={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='asm_passwords.asmsnmp') | first }}"
      - "oracle.crs|oracle_install_crs_ConfigureMgmtDB={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='install_management_database') | first }}"
      - "oracle.crs|oracle_install_crs_MgmtDB_CDB={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='install_management_database') | first }}"
      - "oracle.crs|oracle_install_crs_MgmtDB_Std={{ oracle_binaries |
           selectattr('type', 'equalto', 'grid') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='install_management_database') | first }}"

  - type: database
    version: 12.2.0.1
    files:
      - name: "{{ file_locations.file6 }}"
        creates: database/stage/Components/oracle.oraolap.dbscripts/12.2.0.1.0
      - name: "{{ file_locations.file7 }}"
        creates: database/stage/Components/oracle.rdbms/12.2.0.1.0
    installer_parameters:
      - -waitforcompletion
      - -ignoreSysPrereqs
      - -silent
      - -force
      - oracle.install.option=INSTALL_DB_SWONLY
      - oracle.install.db.InstallEdition=EE
      - DECLINE_SECURITY_UPDATES=true
      - "INVENTORY_LOCATION={{ oracle_binaries |
           selectattr('type', 'equalto', 'all') |
           map(attribute='oracle_inventory') | first }}"
      - "UNIX_GROUP_NAME={{ operating_system.grid_infrastructure.groups |
           selectattr('title', 'equalto', 'inventory') |
           map(attribute='name') | first }}"
      - "ORACLE_HOME={{ oracle_binaries |
           selectattr('type', 'equalto', 'database') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='oracle_home') | first }}"
      - "ORACLE_BASE={{ oracle_binaries |
           selectattr('type', 'equalto', 'database') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='oracle_base') | first }}"
      - "oracle.install.db.OSRACDBA_GROUP={{ oracle_binaries |
           selectattr('type', 'equalto', 'database') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='osracdba_group') | first }}"
      - "oracle.install.db.DBA_GROUP={{ operating_system.database.groups |
           selectattr('title', 'equalto', 'osdba') |
           map(attribute='name') | first }}"
      - "oracle.install.db.OPER_GROUP={{ operating_system.database.groups |
           selectattr('title', 'equalto', 'osoper') |
           map(attribute='name') | first }}"
      - "oracle.install.db.BACKUPDBA_GROUP={{ operating_system.database.groups |
           selectattr('title', 'equalto', 'osbackupdba') |
           map(attribute='name') | first }}"
      - "oracle.install.db.DGDBA_GROUP={{ operating_system.database.groups |
           selectattr('title', 'equalto', 'osdgdba') |
           map(attribute='name') | first }}"
      - "oracle.install.db.KMDBA_GROUP={{ operating_system.database.groups |
           selectattr('title', 'equalto', 'oskmdba') |
           map(attribute='name') | first }}"
databases:
  - version: 12.2.0.1
    parameters:
      - -createDatabase
      - -silent
      - -templateName General_Purpose.dbc
      - -gdbName orcl
      - "-sysPassword {{ oracle_binaries |
           selectattr('type', 'equalto', 'database') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='database_passwords.sys') | first }}"
      - "-systemPassword {{ oracle_binaries |
           selectattr('type', 'equalto', 'database') |
           selectattr('version', 'equalto', '12.2.0.1') |
           map(attribute='database_passwords.system') | first }}"
      - -storageType ASM
      - -diskGroupName DATA
      - -recoveryGroupName DATA
      - -characterSet AL32UTF8
      - -nationalCharacterSet UTF8
      - -totalMemory 1024
      - -emConfiguration none
      - -nodelist rac1,rac2
      - -createAsContainerDatabase True

docker:
  networks:
    - type: public
      name: pub
      subnet: 10.10.10.0
      cidr: 24
      network_name: eth-pub
    - type: private
      name: priv
      subnet: 11.11.11.0
      cidr: 24
      network_name: eth-priv

  containers:
    - name: bind
      hostname: bind
      type: dns
      image: sethmiller/bind
      ports:
        - "53:53/tcp"
        - "53:53/udp"
      volumes:
        - "/srv/docker/bind:/data"
      networks:
        - name: "pub"
          ipv4_address: "10.10.10.10"
      command: "-4"
      env:
        WEBMIN_ENABLED: "false"

    - name: dhcpd
      hostname: dhcpd
      type: dhcp
      image: networkboot/dhcpd
      config_directory: /srv/docker/dhcpd
      config_file: dhcpd.conf
      volumes:
        - "/srv/docker/dhcpd:/data"
        - "/srv/docker/bind/bind/etc:/keys"
      networks:
        - name: "pub"
          ipv4_address: "10.10.10.11"
        - name: "priv"
          ipv4_address: "11.11.11.11"
      dns: 10.10.10.10

    - name: nfs
      hostname: nfs
      type: nfs
      image: sethmiller/nfs
      config_directory: /srv/docker/nfs
      config_file: ganesha.conf
      volumes:
        - "/srv/docker/nfs:/etc/ganesha"
        - "/oraclenfs:/oraclenfs"
      networks:
        - name: "pub"
          ipv4_address: "10.10.10.12"
      dns: 10.10.10.10

    - name: rac1
      hostname: rac1
      type: rac_node
      designation: first
      image: sethmiller/giready
      volumes:
        - "/srv/docker/rac_nodes/custom_services:/usr/lib/custom_services"
        - "/oracledata/stage:/stage"
        - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      networks:
        - name: pub
          dhcp_hostname: rac1
          dhclient_pid: /var/run/dhclient-eth-pub.pid
          ipv4_address: 0.0.0.0
          cidr: 24
          internal_network_name: eth-pub
          external_network_name: rac1-pub
        - name: priv
          dhcp_hostname: rac1-priv
          dhclient_pid: /var/run/dhclient-eth-priv.pid
          ipv4_address: 0.0.0.0
          cidr: 24
          internal_network_name: eth-priv
          external_network_name: rac1-priv
      dns: 10.10.10.10
      shm_size: 2048m
      command: "/usr/lib/systemd/systemd --system --unit=multi-user.target"

    - name: rac2
      hostname: rac2
      type: rac_node
      designation: additional
      image: giinstalled
      volumes:
        - "/srv/docker/rac_nodes/custom_services:/usr/lib/custom_services"
        - "/oracledata/stage:/stage"
        - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      networks:
        - name: pub
          dhcp_hostname: rac2
          dhclient_pid: /var/run/dhclient-eth-pub.pid
          ipv4_address: 0.0.0.0
          cidr: 24
          internal_network_name: eth-pub
          external_network_name: rac2-pub
        - name: priv
          dhcp_hostname: rac2-priv
          dhclient_pid: /var/run/dhclient-eth-priv.pid
          ipv4_address: 0.0.0.0
          cidr: 24
          internal_network_name: eth-priv
          external_network_name: rac2-priv
      dns: 10.10.10.10
      shm_size: 2048m
      command: "/usr/lib/systemd/systemd --system --unit=multi-user.target"


first_rac_node: >-
  {{ docker.containers |
  selectattr('designation', 'defined') |
  selectattr('type', 'equalto', 'rac_node') |
  selectattr('designation', 'equalto', 'first') |
  map(attribute='name') | first }}
